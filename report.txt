# SMarket Database Migration Project Report

## Requirements
1. Technical Requirements:
   - Java 11 or higher
   - Maven for dependency management
   - SQL Server Database (Source)
   - ObjectDB (Target)
   - Required Libraries:
     * Microsoft SQL Server JDBC Driver (12.6.2)
     * JPA API (2.2)
     * Hibernate Core (5.6.15.Final)
     * ObjectDB (2.9.3)
     * Jackson for JSON processing (2.19.0)

2. Functional Requirements:
   - Data migration from SQL Server to ObjectDB
   - Support for multiple entity types:
     * Customers
     * Products
     * Orders
     * Order Details
     * Payments
     * Employees
     * Offices
     * Product Lines
   - Data verification and validation
   - Error handling and logging

## Data Integration
1. Source Database (SQL Server):
   - Tables:
     * Customers
     * Products
     * Orders
     * OrderDetails
     * Payments
     * Employees
     * Offices
     * ProductLines

2. Target Database (ObjectDB):
   - Object-oriented database
   - Supports JPA annotations
   - Direct object persistence

3. Integration Flow:
   - Read data from SQL Server using JDBC
   - Transform data to JPA entities
   - Persist objects to ObjectDB
   - Verify data integrity after migration

## Solution
1. Architecture:
   - Java-based migration tool
   - JPA for object-relational mapping
   - Modular design with separate classes for:
     * Data reading (ReadFromSMarketDB.java)
     * Data saving (SaveToObjectDB.java)
     * Migration orchestration (DatabaseMigration.java)
     * Verification (VerifyMigration.java)

2. Key Components:
   - Entity Classes:
     * Customer.java
     * Product.java
     * Order.java
     * OrderDetail.java
     * Payment.java
     * Employee.java
     * Office.java
     * ProductLine.java
   
   - Primary Key Classes:
     * OrderDetailPK.java
     * PaymentPK.java

3. Migration Process:
   - Step 1: Read data from SQL Server
   - Step 2: Transform to JPA entities
   - Step 3: Save to ObjectDB
   - Step 4: Verify data integrity

4. Required Screenshots:
   \\**Database Schema Diagram**//  class diagram
   \\**Migration Process Flow**//
   \\**Sample Data in Source Database**//  screenshot of sample of data in ms sql server
   \\**Sample Data in Target Database**//   screenshot of sample of data in object db explorer
   \\**Migration Execution Results**//  the output of the execution of the code 

______________________________________________________________________________________________________
Migration Process Flow:::

1- Initialization Phase
    -Connect to SQL Server (Source)
    -Initialize ObjectDB connection (Target)
    -Begin transaction

2- Data Reading Phase (from SQL Server)
    -Read Offices first (independent entity)
    -Read Employees (with two passes for manager relationships)
    -Read Customers (depends on Employees)
    -Read ProductLines (independent entity)
    -Read Products (depends on ProductLines)
    -Read Orders (depends on Customers)
    -Read OrderDetails (depends on Orders and Products)
    -Read Payments (depends on Customers)

3- Data Transformation Phase
    -Create mapping collections for relationships
    -Office Map
    -Employee Map
    -Customer Map
    -ProductLine Map
    -Product Map
    -Order Map

4- Data Persistence Phase (to ObjectDB)
    .Clear existing data
    .Batch persist in correct order:
        -Offices
        -Employees
        -Customers
        -ProductLines
        -Products
        -Orders
        -OrderDetails
        -Payments

5- Verification Phase
    -Count records for each entity type
    -Display sample data
    -Verify relationships
    -Commit transaction

6- Error Handling
    -Rollback on failure
    -Close connections
    -Error logging